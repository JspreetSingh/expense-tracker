// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should correctly render expenses summary with multiple expenses 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div>
    <h1>
        Viewing 
        23
         
        expenses
         totaling 
        2768754335
         
    </h1>
</div>,
  "nodes": Array [
    <div>
      <h1>
            Viewing 
            23
             
            expenses
             totaling 
            2768754335
             
      </h1>
</div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_context": Object {},
    "_didScheduleRenderPhaseUpdate": false,
    "_dispatcher": Object {
      "readContext": [Function],
      "useCallback": [Function],
      "useContext": [Function],
      "useDebugValue": [Function],
      "useDeferredValue": [Function],
      "useEffect": [Function],
      "useImperativeHandle": [Function],
      "useLayoutEffect": [Function],
      "useMemo": [Function],
      "useReducer": [Function],
      "useRef": [Function],
      "useResponder": [Function],
      "useState": [Function],
      "useTransition": [Function],
    },
    "_element": <ExpensesSummary
      expenseCount={23}
      expensesTotal={2768754335}
/>,
    "_firstWorkInProgressHook": null,
    "_forcedUpdate": false,
    "_instance": null,
    "_isReRender": false,
    "_newState": null,
    "_numberOfReRenders": 0,
    "_renderPhaseUpdates": null,
    "_rendered": <div>
      <h1>
            Viewing 
            23
             
            expenses
             totaling 
            2768754335
             
      </h1>
</div>,
    "_rendering": false,
    "_updater": Updater {
      "_callbacks": Array [],
      "_renderer": [Circular],
    },
    "_workInProgressHook": null,
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <ExpensesSummary
    expenseCount={23}
    expensesTotal={2768754335}
/>,
}
`;

exports[`should correctly render expenses summary with one expense 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div>
    <h1>
        Viewing 
        1
         
        expense
         totaling 
        235
         
    </h1>
</div>,
  "nodes": Array [
    <div>
      <h1>
            Viewing 
            1
             
            expense
             totaling 
            235
             
      </h1>
</div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_context": Object {},
    "_didScheduleRenderPhaseUpdate": false,
    "_dispatcher": Object {
      "readContext": [Function],
      "useCallback": [Function],
      "useContext": [Function],
      "useDebugValue": [Function],
      "useDeferredValue": [Function],
      "useEffect": [Function],
      "useImperativeHandle": [Function],
      "useLayoutEffect": [Function],
      "useMemo": [Function],
      "useReducer": [Function],
      "useRef": [Function],
      "useResponder": [Function],
      "useState": [Function],
      "useTransition": [Function],
    },
    "_element": <ExpensesSummary
      expenseCount={1}
      expensesTotal={235}
/>,
    "_firstWorkInProgressHook": null,
    "_forcedUpdate": false,
    "_instance": null,
    "_isReRender": false,
    "_newState": null,
    "_numberOfReRenders": 0,
    "_renderPhaseUpdates": null,
    "_rendered": <div>
      <h1>
            Viewing 
            1
             
            expense
             totaling 
            235
             
      </h1>
</div>,
    "_rendering": false,
    "_updater": Updater {
      "_callbacks": Array [],
      "_renderer": [Circular],
    },
    "_workInProgressHook": null,
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <ExpensesSummary
    expenseCount={1}
    expensesTotal={235}
/>,
}
`;
